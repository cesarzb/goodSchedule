---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/authenticate":
    post:
      summary: Returns a token
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxfQ.zCGBEiC4n4X5jij4lK4nSEtrbebYxELZ6OfBwdm6CJg
        '401':
          description: missing parameter (password or username) or they're wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    default: 'param is missing or the value is empty: username'
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                      default: Student99
                    password:
                      type: string
                      default: Password1
                  required:
                  - username
                  - password
  "/api/v1/deauthenticate":
    delete:
      summary: Returns no content
      tags:
      - Authentication
      security:
      - bearer_auth: []
      responses:
        '204':
          description: user deauthenticated successfully
  "/api/v1/plans":
    get:
      summary: Returns all plans
      tags:
      - Plans
      security:
      - bearer_auth: []
      responses:
        '200':
          description: index for plan model
          content:
            application/json:
              schema:
                type: array
                properties:
                - type: object
                  properties:
                    name:
                      type: string
                      default: Plan99
                    user_id:
                      type: integer
                      default: 1
                  required:
                  - name
                  - user_id
                example:
                - name: Plan99
                  user_id: 1
        '401':
          description: user is unauthorized
    post:
      summary: Returns a plan
      tags:
      - Plans
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: plan created successfuly
          content:
            application/json:
              schema:
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      name:
                        type: string
                        default: Plan99
                      user_id:
                        type: integer
                        default: 1
                    required:
                    - name
                    - user_id
        '422':
          description: plan couldn't be created
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        properties:
                        - type: string
                          default: can't be blank
                      user_id:
                        type: array
                        properties:
                        - type: string
                          default: can't be nil
                required:
                - errors
                example:
                  errors:
                    name:
                    - can't be blank
                    user_id:
                    - can't be nil
        '401':
          description: user is unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan:
                  type: object
                  properties:
                    name:
                      type: string
                      default: Plan99
                    user_id:
                      type: integer
                      default: 1
                  required:
                  - name
                  - user_id
  "/api/v1/plans/{id}":
    get:
      summary: Returns specified plan
      tags:
      - Plans
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: when plan exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      name:
                        type: string
                        default: Plan99
                      user_id:
                        type: integer
                        default: 1
                    required:
                    - name
                    - user_id
        '401':
          description: user is unauthorized
        '404':
          description: plan with specified id doesn't exist
    put:
      summary: Updates specified plan
      tags:
      - Plans
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: plan updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      name:
                        type: string
                        default: Plan99
                      user_id:
                        type: integer
                        default: 1
                    required:
                    - name
                    - user_id
        '422':
          description: wrong update parameters
        '401':
          description: user is unauthorized
        '404':
          description: plan with specified id doesn't exist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan:
                  type: object
                  properties:
                    name:
                      type: string
                      default: Plan99
                    user_id:
                      type: integer
                      default: 1
                  required:
                  - name
                  - user_id
    delete:
      summary: Deletes specified plan
      tags:
      - Plans
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: plan deleted successfully
        '401':
          description: user is unauthorized
        '404':
          description: plan with specified id doesn't exist
  "/api/v1/signup":
    post:
      summary: Returns a token
      tags:
      - Signup
      parameters: []
      responses:
        '201':
          description: signup successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxfQ.zCGBEiC4n4X5jij4lK4nSEtrbebYxELZ6OfBwdm6CJg
                required:
                - token
        '422':
          description: missing or wrong parameter (probably validations)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      password:
                        type: array
                        properties:
                        - type: string
                          default: can't be blank
                      username:
                        type: array
                        properties:
                        - type: string
                          default: can't be blank
                required:
                - errors
                example:
                  errors:
                    password:
                    - can't be blank
                    username:
                    - can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                      default: Student99
                    password:
                      type: string
                      default: Password1
                  required:
                  - username
                  - password
servers:
- url: http://{developmentHost}
  variables:
    developmentHost:
      default: localhost:3000/
- url: https://{productiontHost}
  variables:
    productiontHost:
      default: goodschedule.herokuapp.com/
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
